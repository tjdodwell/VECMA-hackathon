append = false		# type: bool, doc: Add new outputs to the end of existing files? If false, overwrite files.
async_send = false		# type: bool, doc: Whether to use asyncronous MPI sends
datadir = .		# type: string
dump_format = nc		# type: string, doc: File extension for output files
dump_on_restart = true		# type: bool, doc: Write initial state as time point 0?
incintshear = false		# type: bool
mxg = 0		# type: int, doc: Number of guard cells on each side in X
myg = 2		# type: int, doc: Number of guard cells on each side in Y
non_uniform = true		# type: bool
nout = 100		# type: int, doc: Number of output steps
optionfile = BOUT.inp		# not used , from: 
periodicx = false		# type: bool, doc: Make grid periodic in X?
restart = false		# type: bool, doc: Load state from restart files?
restart_format = nc		# type: string, doc: File extension for output files
restartdir = .
settingsfile = BOUT.settings		# type: string
stopcheck = false		# type: bool, doc: Check if a file exists, and exit if it does.
timestep = 0.1		# type: BoutReal, doc: Output time step size
twistshift = false		# type: bool, doc: Apply a Twist-Shift boundary using ShiftAngle?
wall_limit = -1		# type: BoutReal, doc: Wall time limit in hours. By default (< 0), no limit
zmax = 1		# type: BoutReal
zmin = 0		# type: BoutReal

[all]
evolve_bndry = false		# type: bool

[conduction]
chi = 22.242566467268702		# type: BoutReal, doc: Conduction coefficient

[input]
max_recursion_depth = 0		# type: string, doc: Maximum recursion depth allowed in expressions. 0 = no recursion; -1 = unlimited
transform_from_field_aligned = true		# type: bool

[mesh]
calcparallelslices_on_communicate = true		# type: bool
dy = 0.2
extrapolate_x = false		# type: bool
extrapolate_y = false		# type: bool
include_corner_cells = true		# type: bool, doc: Communicate corner guard and boundary cells. Can be set to false if you are sure that you will not need these cells, for mixed derivatives D2DXDY (or anything else), for example if your grid has orthogonal x- and y-directions.  This might slightly reduce communication time.
ixseps1 = -1
ixseps2 = -1
maxregionblocksize = 64		# type: int
nx = 1
ny = 100
nz = 1
staggergrids = false		# type: bool
symmetricglobalx = true		# type: bool
symmetricglobaly = true		# type: bool
type = bout		# type: string

[mesh:ddz]
fft_filter = 0		# type: BoutReal

[mesh:paralleltransform]
type = identity		# type: string

[output]
enabled = true		# type: bool
floats = false		# type: bool
flush = true		# type: bool
flushfrequency = 1		# type: int
guards = true		# type: bool
init_missing = false		# type: bool
openclose = true		# type: bool
parallel = false		# type: bool
shiftinput = false		# type: bool
shiftoutput = false		# type: bool

[restart]
enabled = true		# type: bool
floats = false		# type: bool
flush = true		# type: bool
flushfrequency = 1		# type: int
guards = true		# type: bool
init_missing = false		# type: bool
openclose = true		# type: bool
parallel = false		# type: bool
shiftinput = false		# type: bool
shiftoutput = false		# type: bool

[run]
finished = Tue Feb 23 14:56:21 2021
		# not used , from: 
revision = 7fe0f8de149455915ec84f202eed44c71a9428b0		# not used , from: 
started = Tue Feb 23 14:56:16 2021
		# not used , from: 
version = 5.0.0-alpha		# not used , from: 

[solver]
atol = 1e-12		# type: BoutReal
is_nonsplit_model_diffusive = true		# type: bool, doc: If not a split operator, treat RHS as diffusive?
mldq = 3		# type: int
mlkeep = 0		# type: int
mms = false		# type: bool
mms_initialise = false		# type: bool
monitor_timestep = false		# type: bool
mudq = 3		# type: int
mukeep = 0		# type: int
mxstep = 500		# type: int
nout = 100		# type: int, doc: Number of output steps. Overrides global setting.
output_step = 0.1		# type: BoutReal, doc: Output time step size. Overrides global TIMESTEP setting.
precon_dimens = 50		# type: int
precon_tol = 0.0001		# type: BoutReal
rtol = 1e-05		# type: BoutReal
type = pvode		# type: string
use_precon = false		# type: bool

[t]
bndry_all = dirichlet_o4(0.0)		# type: string
evolve_bndry = false		# type: bool
function = gauss(y - gauss_centre, gauss_width)		# type: string
gauss_centre = 3.141592653589793
gauss_width = 0.2
scale = 0.5694318442029738		# type: BoutReal
